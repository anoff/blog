<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on Andreas&#39; Blog</title><link>//blog.anoff.io/tags/azure/</link><description>Recent content in azure on Andreas&#39; Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="//blog.anoff.io/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Building autoscaling CI infrastructure with Azure Kubernetes</title><link>//blog.anoff.io/2019-10-autoscaling-ci-agent-with-azure-kubernetes/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-10-autoscaling-ci-agent-with-azure-kubernetes/</guid><description>Ever wanted to create a build agent factory where you do not have to care about how many build agents you need at a given point? With this post I want to share my experience setting up a dedicated CI runner infrastructure with the Azure + Pipelines ecosystem. The main features of the solution are automated scaling, ephemeral build agents, docker based environments, minimal operation responsible and strong pay-per-use billing concepts.</description></item><item><title>Hosting Gitea and Drone with Docker</title><link>//blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</guid><description>&lt;p&gt;This post will walk you through setting up a self hosted git based continuous integration environment on a two machine setup - assuming you already have two virtual machines at your disposal.
Using &lt;a href=&#34;https://gitea.io/&#34;&gt;&lt;strong&gt;Gitea&lt;/strong&gt;&lt;/a&gt; for git hosting and contribution management and &lt;a href=&#34;https://drone.io/&#34;&gt;&lt;strong&gt;Drone&lt;/strong&gt;&lt;/a&gt; for docker-based build jobs, this will guide you through creating &lt;strong&gt;docker-compose&lt;/strong&gt; files as well as configuring the individual services and getting &lt;strong&gt;SSL certificates&lt;/strong&gt; via &lt;a href=&#34;https://traefik.io/&#34;&gt;&lt;strong&gt;traefik&lt;/strong&gt;&lt;/a&gt;.
Docker and docker-compose knowledge is required for this tutorial. It mostly focuses on the correct configuration of all the services at play here and not explaining their basic functionality.&lt;/p&gt;
&lt;p&gt;This tutorial uses Azure resources so some of the aspects might not be 100% applicable if you chose another infrastructure provider.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Configure Azure Active Directory as Authentication Provider for Gitea</title><link>//blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</guid><description>&lt;p&gt;&lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;Gitea&lt;/a&gt; is an open source git hosting platform, written in Go forked from the Gogs project and seems to be highly inspired by GitHub.
If you want to host your own git platform and want to use &lt;strong&gt;Azure Active Directory&lt;/strong&gt; as an authentication provider - this post might help you.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Automated dev workflow for using Data Science VM on Azure</title><link>//blog.anoff.io/2018-03-22-dev-workflow-datascience/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-03-22-dev-workflow-datascience/</guid><description>tl;dr; I put together a bunch of scripts on Github that let you deploy a VM from your command line as well as sync code from your local directory to the VM easily to be able to use local IDE and git but execute on the powerful remote machine. Perfect for Data Science applications based around jupyter notebook.
In my previous blog post I explained how to do Terraform deployment of an Azure Data Science Virtual Machine.</description></item><item><title>Deploy Datascience infrastructure on Azure using Terraform</title><link>//blog.anoff.io/2018-01-23-dsvm-terraform/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-01-23-dsvm-terraform/</guid><description>In this article I will talk about my experience building my first infrastructure deployment using Terraform that does (a little) more than combining off-the-shelf resources.
The stack we will deploy üì¶ Lately I‚Äôve been looking at a lot of Microsoft Azure services in the big data area. I am looking for something to replace a Hadoop based üêò data analytics environment consisting mainly of HDFS, Spark &amp;amp; Jupyter.
The most obvious solution is to use a HDInsight cluster which is basically a managed Hadoop that you can pick in different flavours.</description></item></channel></rss>