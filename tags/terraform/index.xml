<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on Andreas&#39; Blog</title>
    <link>https://blog.anoff.io/tags/terraform/</link>
    <description>Recent content in terraform on Andreas&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.anoff.io/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automated dev workflow for using Data Science VM on Azure</title>
      <link>https://blog.anoff.io/2018-03-22-dev-workflow-datascience/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.anoff.io/2018-03-22-dev-workflow-datascience/</guid>
      <description>tl;dr; I put together a bunch of scripts on Github that let you deploy a VM from your command line as well as sync code from your local directory to the VM easily to be able to use local IDE and git but execute on the powerful remote machine. Perfect for Data Science applications based around jupyter notebook.
 In my previous blog post I explained how to do Terraform deployment of an Azure Data Science Virtual Machine.</description>
    </item>
    
    <item>
      <title>Deploy Datascience infrastructure on Azure using Terraform</title>
      <link>https://blog.anoff.io/2018-01-23-dsvm-terraform/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.anoff.io/2018-01-23-dsvm-terraform/</guid>
      <description>In this article I will talk about my experience building my first infrastructure deployment using Terraform that does (a little) more than combining off-the-shelf resources.
The stack we will deploy üì¶ Lately I‚Äôve been looking at a lot of Microsoft Azure services in the big data area. I am looking for something to replace a Hadoop based üêò data analytics environment consisting mainly of HDFS, Spark &amp;amp; Jupyter.
The most obvious solution is to use a HDInsight cluster which is basically a managed Hadoop that you can pick in different flavours.</description>
    </item>
    
  </channel>
</rss>