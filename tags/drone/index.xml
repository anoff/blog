<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>drone on Andreas' Blog</title><link>//blog.anoff.io/tags/drone/</link><description>Recent content in drone on Andreas' Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 08 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="//blog.anoff.io/tags/drone/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Vitae - Auto built and git versioned CV</title><link>//blog.anoff.io/2019-04-08-cv-continuous-vitae/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-04-08-cv-continuous-vitae/</guid><description>Versioning your CV is important. One traditional approach is to date it whenever you send it out. I chose to present my CV on my website and host it on GitHub. In this blog post I want to explain how I set up continuous integration pipeline for building my CV that automatically injects a unique version into each build. This method is applicable for anyone choosing to ascii-based CV - in my case LaTeX.</description></item><item><title>Hosting Gitea and Drone with Docker</title><link>//blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</guid><description>&lt;p>This post will walk you through setting up a self hosted git based continuous integration environment on a two machine setup - assuming you already have two virtual machines at your disposal.
Using &lt;a href="https://gitea.io/">&lt;strong>Gitea&lt;/strong>&lt;/a> for git hosting and contribution management and &lt;a href="https://drone.io/">&lt;strong>Drone&lt;/strong>&lt;/a> for docker-based build jobs, this will guide you through creating &lt;strong>docker-compose&lt;/strong> files as well as configuring the individual services and getting &lt;strong>SSL certificates&lt;/strong> via &lt;a href="https://traefik.io/">&lt;strong>traefik&lt;/strong>&lt;/a>.
Docker and docker-compose knowledge is required for this tutorial. It mostly focuses on the correct configuration of all the services at play here and not explaining their basic functionality.&lt;/p>
&lt;p>This tutorial uses Azure resources so some of the aspects might not be 100% applicable if you chose another infrastructure provider.&lt;/p>
&lt;p></description></item></channel></rss>