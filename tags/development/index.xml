<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Andreas&#39; Blog</title><link>https://blog.anoff.io/tags/development/</link><description>Recent content in Development on Andreas&#39; Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.anoff.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Preview AsciiDoc with PlantUML in VS Code</title><link>https://blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</link><pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</guid><description>This post is for everyone that likes to write AsciiDoc in VS Code but also wants to inline PlantUML diagrams within their docs. In a previous post about diagrams with PlantUML I gave an intro into PlantUML and how to preview images in VS Code. With the latest release of the asciidoctor plugin for VS Code it is possible to easily preview embedded PlantUML images within AsciiDocs. No more need to maintain attributes in each file üéâ</description></item><item><title>Get Hugo to render (nice) Asciidocs</title><link>https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/</guid><description>While migrating my blog from Jekyll to Hugo I went down quite a rabbit hole. While setup and migration to Hugo was a breeze, I spent a lot of time making my .adoc formatted post work with the new blog. After working through several GitHub issues I ended up manipulating the DOM with Javascript to get admonitions working. It still doesn&amp;#8217;t feel right - but hey it works! ü§∑‚Äç‚ôÇÔ∏è This post will cover the steps I took in case I myself or anyone out there ever needs to do this again.</description></item><item><title>Converting existing AsciiDoc into an Antora project</title><link>https://blog.anoff.io/2019-02-15-antora-first-steps/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-02-15-antora-first-steps/</guid><description>After 2 years of working with the arc42 template in markdown, I spent the last few weeks learning about an asciidoc based site generator named Antora. The main reason for the interest in AsciiDoc was the fact that the limited feature set in markdown often impairs you while writing down complex things. But I had one problem; most of our documentation is scattered across multiple repositories as we try to keep the docs as close to the code as possible.</description></item><item><title>Get the most out of hackathons</title><link>https://blog.anoff.io/2018-12-09-stuttgart-hackathon/</link><pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-12-09-stuttgart-hackathon/</guid><description>&lt;p&gt;End of October I joined the &lt;a href=&#34;https://www.hackathon-stuttgart.de/&#34;&gt;Stuttgart Hackathon&lt;/a&gt; for the second time. It was my overall 4th public Hackathon. In this blog post I want to tell you why I enjoy doing Hackathons and why you should join one too if you have the chance!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR; &lt;strong&gt;Network&lt;/strong&gt; and play with expensive toys&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Markdown native diagrams with PlantUML</title><link>https://blog.anoff.io/2018-07-31-diagrams-with-plantuml/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-07-31-diagrams-with-plantuml/</guid><description>This post covers PlantUML basics and how it can be used in GitLab or GitHub projects as well as a seamless local development environment using Visual Studio Code. I have been wanting to write this post for months. Lately I have been using PlantUML extensively at work but also in my private projects. You can see it being used in my plantbuddy and techradar projects on GitHub. Using it in different places and for various purposes I came across a bunch of issues that I want to share in this post.</description></item><item><title>Building realtime apps with Vue and nodeJS</title><link>https://blog.anoff.io/2018-04-18-node-vue-websockets/</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-04-18-node-vue-websockets/</guid><description>Wanting to build a simple SPA as a side project I struggled with things that might annoy a lot of newcomers that do not want to go full vanilla. Which web framework, which style library, which server framework - and more importantly how does it all work together?
In this post we will put together a bunch of great tools out there to build a realtime web app with a few single lines of code.</description></item></channel></rss>