<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>anoff on Andreas&#39; Blog</title><link>https://blog.anoff.io/author/anoff/</link><description>Recent content in anoff on Andreas&#39; Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 30 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.anoff.io/author/anoff/index.xml" rel="self" type="application/rss+xml"/><item><title>Running influxdb on Raspberry Pi using Docker compose</title><link>https://blog.anoff.io/2020-12-run-influx-on-raspi-docker-compose/</link><pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2020-12-run-influx-on-raspi-docker-compose/</guid><description>&lt;p&gt;This blog post will explain how you can setup influxdb (and the telegraf plugin) on your Raspberry Pi using docker-compose.
We will use the config-as-code to create a reproducible setup.
This is extremely helpful for hobby projects that you come back to every now-and-then because you can lookup exactly what you are running üòâ&lt;/p&gt;</description></item><item><title>How to setup Raspberry Pi as home server with Docker support</title><link>https://blog.anoff.io/2020-12-install-docker-raspi/</link><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2020-12-install-docker-raspi/</guid><description>&lt;p&gt;This blog post will cover how to setup a Raspberry Pi with Docker support.
It will also cover some basic steps that will make it easier to work with your RasPi later on.
This setup will work completely without monitor/keyboard for your Raspberry but you need a LAN connection to it.
I wrote most commands so they are easily pastable and do not require too much interactive work - you should however carefully read what is going on with each of those commands before you fire them off!&lt;/p&gt;</description></item><item><title>Programming ESP and other Arduino compatible chips using VS Code on MacOS</title><link>https://blog.anoff.io/2020-12-programming-arduino-esp-with-vs-code/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2020-12-programming-arduino-esp-with-vs-code/</guid><description>&lt;p&gt;When you are developing microcontroller based projects as a hobbyist you often end up with the Arduino ecosystem and might be tempted to use their IDE.
This post will explain how you can develop, program &amp;amp; debug Arduino compatible devices using VS Code.
Even though this post is written with a MacOS walk-through it should be valid for other operation systems as well.&lt;/p&gt;</description></item><item><title>Publishing private npm packages to GitHub Package registry for free</title><link>https://blog.anoff.io/2020-07-private-npm-package-github/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2020-07-private-npm-package-github/</guid><description>&lt;p&gt;Even though I am a big fan of Open Source Software and try to make my projects open and consumable by others as well, there are cases where you want to keep your stuff private.
But even if you work in a closed source environment you still want to use the same tools that you employ in the open source world.
In this blog post I will explain how you can create private npm packages for your Javascript/Typescript projects - and I will show you how you can host your private npm packages &lt;strong&gt;for free&lt;/strong&gt;!&lt;/p&gt;</description></item><item><title>Building autoscaling CI infrastructure with Azure Kubernetes</title><link>https://blog.anoff.io/2019-10-autoscaling-ci-agent-with-azure-kubernetes/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-10-autoscaling-ci-agent-with-azure-kubernetes/</guid><description>Ever wanted to create a build agent factory where you do not have to care about how many build agents you need at a given point? With this post I want to share my experience setting up a dedicated CI runner infrastructure with the Azure + Pipelines ecosystem. The main features of the solution are automated scaling, ephemeral build agents, docker based environments, minimal operation responsible and strong pay-per-use billing concepts.</description></item><item><title>Migrating to vuetify 2.1</title><link>https://blog.anoff.io/2019-10-migrating-vuetify-1-to-2/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-10-migrating-vuetify-1-to-2/</guid><description>I just migrated the code for the devradar editor to the latest major version of vuetify. There is an officiel migration guide that helped me solve 70% of the issues but here is a quick overview of the biggest issues I encountered and what actually changed.
Note: This post has been updated on 2019-11-01 with a chapter on the new grid system v-flex ‚û°Ô∏è v-col
Caution: üö® This was written for a migration from vuetify 1.</description></item><item><title>Migrating to Azure Pipelines</title><link>https://blog.anoff.io/2019-08-24-drone-ci-travis-ci-to-azure-pipelines/</link><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-08-24-drone-ci-travis-ci-to-azure-pipelines/</guid><description>Beginning of the year I switched my blogs build chain from Travis CI to drone CI. Due to some tasks with Azure DevOps at work I wanted to test how good it fits my private projects. In this post I will NOT tell you how to set up your pipelines project because Microsoft has great docs for that. Instead this post will cover how to best put your build workflow into a pipeline specification.</description></item><item><title>Reference GitHub #issues during git rebase</title><link>https://blog.anoff.io/2019-07-20-git-config-rebase-github-issue/</link><pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-07-20-git-config-rebase-github-issue/</guid><description>&lt;p&gt;Being a developer most times means working with git.
There are many different ways to use git and every project, every developer has their preferences.
For my own projects I work a lot with GitHub and I love using the &lt;code&gt;git rebase -i&lt;/code&gt; feature to clean up commits.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Composing navigation files in Antora using the include macro</title><link>https://blog.anoff.io/2019-05-14-antora-navigation-files/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-05-14-antora-navigation-files/</guid><description>&lt;p&gt;This third post in the series of Antora posts quickly addresses a feature I only recently discovered.
It will show you some techniques you can use to compose the navigation menu in a multi-repository, multi-module setup.
This is especially interesting if you have content spread across repositories that you want to present hierarchically in the navigation tree.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Preview AsciiDoc with PlantUML in VS Code</title><link>https://blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</link><pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</guid><description>This post is for everyone that likes to write AsciiDoc in VS Code but also wants to inline PlantUML diagrams within their docs. In a previous post about diagrams with PlantUML I gave an intro into PlantUML and how to preview images in VS Code. With the latest release of the asciidoctor plugin for VS Code it is possible to easily preview embedded PlantUML images within AsciiDocs. No more need to maintain attributes in each file üéâ</description></item><item><title>Advanced customization for Antora - PlantUML support &amp; custom UI</title><link>https://blog.anoff.io/2019-04-19-antora-plantuml-customize-ui/</link><pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-04-19-antora-plantuml-customize-ui/</guid><description>This post will cover some slightly advanced steps for building a multi-repository Asciidoc documentation using Antora. My previous post blog.anoff.io/2019-02-15-antora-first-steps covered basics of Antora and how to migrate existing AsciiDoc files. In this post I will go through the steps of including content from another repository, building a custom UI and adding plantUML support to the (automated, dockerized) build.
plantUML supportOne of the most important things for me when it comes to software docs is the ability to show relationships and interactions using diagrams.</description></item><item><title>Continuous Vitae - Auto built and git versioned CV</title><link>https://blog.anoff.io/2019-04-08-cv-continuous-vitae/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-04-08-cv-continuous-vitae/</guid><description>Versioning your CV is important. One traditional approach is to date it whenever you send it out. I chose to present my CV on my website and host it on GitHub. In this blog post I want to explain how I set up continuous integration pipeline for building my CV that automatically injects a unique version into each build. This method is applicable for anyone choosing to ascii-based CV - in my case LaTeX.</description></item><item><title>Hosting Gitea and Drone with Docker</title><link>https://blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-03-24-self-hosted-gitea-drone/</guid><description>&lt;p&gt;This post will walk you through setting up a self hosted git based continuous integration environment on a two machine setup - assuming you already have two virtual machines at your disposal.
Using &lt;a href=&#34;https://gitea.io/&#34;&gt;&lt;strong&gt;Gitea&lt;/strong&gt;&lt;/a&gt; for git hosting and contribution management and &lt;a href=&#34;https://drone.io/&#34;&gt;&lt;strong&gt;Drone&lt;/strong&gt;&lt;/a&gt; for docker-based build jobs, this will guide you through creating &lt;strong&gt;docker-compose&lt;/strong&gt; files as well as configuring the individual services and getting &lt;strong&gt;SSL certificates&lt;/strong&gt; via &lt;a href=&#34;https://traefik.io/&#34;&gt;&lt;strong&gt;traefik&lt;/strong&gt;&lt;/a&gt;.
Docker and docker-compose knowledge is required for this tutorial. It mostly focuses on the correct configuration of all the services at play here and not explaining their basic functionality.&lt;/p&gt;
&lt;p&gt;This tutorial uses Azure resources so some of the aspects might not be 100% applicable if you chose another infrastructure provider.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Configure Azure Active Directory as Authentication Provider for Gitea</title><link>https://blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</guid><description>&lt;p&gt;&lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;Gitea&lt;/a&gt; is an open source git hosting platform, written in Go forked from the Gogs project and seems to be highly inspired by GitHub.
If you want to host your own git platform and want to use &lt;strong&gt;Azure Active Directory&lt;/strong&gt; as an authentication provider - this post might help you.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Get Hugo to render (nice) Asciidocs</title><link>https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/</guid><description>While migrating my blog from Jekyll to Hugo I went down quite a rabbit hole. While setup and migration to Hugo was a breeze, I spent a lot of time making my .adoc formatted post work with the new blog. After working through several GitHub issues I ended up manipulating the DOM with Javascript to get admonitions working. It still doesn&amp;#8217;t feel right - but hey it works! ü§∑‚Äç‚ôÇÔ∏è This post will cover the steps I took in case I myself or anyone out there ever needs to do this again.</description></item><item><title>Converting existing AsciiDoc into an Antora project</title><link>https://blog.anoff.io/2019-02-15-antora-first-steps/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-02-15-antora-first-steps/</guid><description>After 2 years of working with the arc42 template in markdown, I spent the last few weeks learning about an asciidoc based site generator named Antora. The main reason for the interest in AsciiDoc was the fact that the limited feature set in markdown often impairs you while writing down complex things. But I had one problem; most of our documentation is scattered across multiple repositories as we try to keep the docs as close to the code as possible.</description></item><item><title>What I learned about Management and Recruiting</title><link>https://blog.anoff.io/2019-01-31-book-google-schmidt/</link><pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-01-31-book-google-schmidt/</guid><description>&lt;p&gt;As &lt;a href=&#34;{{ site.baseurl }}/2019-01-15-book-2018-in-books&#34;&gt;promised&lt;/a&gt; my book series will start with two books out of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Facebook,_Apple,_Amazon,_Netflix_and_Google&#34;&gt;FAANG&lt;/a&gt; league. The book &lt;em&gt;How Google works&lt;/em&gt; covers many aspects of the companies culture. The book has lots of management insights that - at the time of reading - were of little interest to me. Therefore I want to briefly highlight a few points about &lt;a href=&#34;#innovation&#34;&gt;innovation&lt;/a&gt; that I find fascinating and then move to the human factors like &lt;a href=&#34;#recruiting&#34;&gt;recruiting&lt;/a&gt; and &lt;a href=&#34;#competence-management&#34;&gt;competence management&lt;/a&gt; that are also covered extensively in the book.&lt;/p&gt;</description></item><item><title>My year 2018 in books</title><link>https://blog.anoff.io/2019-01-15-book-2018-in-books/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2019-01-15-book-2018-in-books/</guid><description>For the last ~15 months I spent a lot of wasted time (commuting to work, waiting at the doctors, sitting on planes) with audio books. I have never been a big reader and the entry barrier to start listening to a book instead of music is a lot lower than packing books, reading instead of listening etc. That&amp;rsquo;s why I became a really big fan of listening to various audiobooks.</description></item><item><title>Get the most out of hackathons</title><link>https://blog.anoff.io/2018-12-09-stuttgart-hackathon/</link><pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-12-09-stuttgart-hackathon/</guid><description>&lt;p&gt;End of October I joined the &lt;a href=&#34;https://www.hackathon-stuttgart.de/&#34;&gt;Stuttgart Hackathon&lt;/a&gt; for the second time. It was my overall 4th public Hackathon. In this blog post I want to tell you why I enjoy doing Hackathons and why you should join one too if you have the chance!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR; &lt;strong&gt;Network&lt;/strong&gt; and play with expensive toys&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>RBAC with Google Firestore</title><link>https://blog.anoff.io/2018-08-12-rbac-firestore/</link><pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-08-12-rbac-firestore/</guid><description>&lt;p&gt;This post will explain how to implement role based access control (&lt;a href=&#34;https://en.wikipedia.org/wiki/Role-based_access_control&#34;&gt;RBAC&lt;/a&gt;) using the Google Firestore serverless database. Firebase and Firestore in particular with the concept presented in this post offers the most seamless integration of serverless infrastructure with a mobile client at this point. It has become my go to backend for all minor web apps I build.&lt;/p&gt;</description></item><item><title>Markdown native diagrams with PlantUML</title><link>https://blog.anoff.io/2018-07-31-diagrams-with-plantuml/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-07-31-diagrams-with-plantuml/</guid><description>This post covers PlantUML basics and how it can be used in GitLab or GitHub projects as well as a seamless local development environment using Visual Studio Code. I have been wanting to write this post for months. Lately I have been using PlantUML extensively at work but also in my private projects. You can see it being used in my plantbuddy and techradar projects on GitHub. Using it in different places and for various purposes I came across a bunch of issues that I want to share in this post.</description></item><item><title>Building realtime apps with Vue and nodeJS</title><link>https://blog.anoff.io/2018-04-18-node-vue-websockets/</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-04-18-node-vue-websockets/</guid><description>Wanting to build a simple SPA as a side project I struggled with things that might annoy a lot of newcomers that do not want to go full vanilla. Which web framework, which style library, which server framework - and more importantly how does it all work together?
In this post we will put together a bunch of great tools out there to build a realtime web app with a few single lines of code.</description></item><item><title>GitLab CI/CD for GitHub</title><link>https://blog.anoff.io/2018-03-30-gitlab-ci-for-github/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-03-30-gitlab-ci-for-github/</guid><description>&lt;p&gt;When creating a git project that you want to share with others you traditionally had the choice between GitHub with its huge community and tons of integrations, GitLab with a great overall dev experience from issues to one of the best CI/CD solutions out there and BitBucket being one of the friends you have since kindergarten. My personal decision was to host all my personal projects on &lt;a href=&#34;https://github.com/anoff&#34;&gt;ü¶ë GitHub&lt;/a&gt;. For projects that need CI/CD I tinkered around with &lt;a href=&#34;https://travis-ci.org/&#34;&gt;üë∑‚Äç Travis CI&lt;/a&gt; and &lt;a href=&#34;https://circleci.com/&#34;&gt;üÖæÔ∏è Circle CI&lt;/a&gt; on top of GitHub.&lt;/p&gt;</description></item><item><title>Automated dev workflow for using Data Science VM on Azure</title><link>https://blog.anoff.io/2018-03-22-dev-workflow-datascience/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-03-22-dev-workflow-datascience/</guid><description>tl;dr; I put together a bunch of scripts on Github that let you deploy a VM from your command line as well as sync code from your local directory to the VM easily to be able to use local IDE and git but execute on the powerful remote machine. Perfect for Data Science applications based around jupyter notebook.
In my previous blog post I explained how to do Terraform deployment of an Azure Data Science Virtual Machine.</description></item><item><title>Deploy Datascience infrastructure on Azure using Terraform</title><link>https://blog.anoff.io/2018-01-23-dsvm-terraform/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.anoff.io/2018-01-23-dsvm-terraform/</guid><description>In this article I will talk about my experience building my first infrastructure deployment using Terraform that does (a little) more than combining off-the-shelf resources.
The stack we will deploy üì¶ Lately I‚Äôve been looking at a lot of Microsoft Azure services in the big data area. I am looking for something to replace a Hadoop based üêò data analytics environment consisting mainly of HDFS, Spark &amp;amp; Jupyter.
The most obvious solution is to use a HDInsight cluster which is basically a managed Hadoop that you can pick in different flavours.</description></item></channel></rss>