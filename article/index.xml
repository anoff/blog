<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Articles on Andreas&#39; Blog</title><link>//blog.anoff.io/article/</link><description>Recent content in Articles on Andreas&#39; Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="//blog.anoff.io/article/index.xml" rel="self" type="application/rss+xml"/><item><title>Preview AsciiDoc with PlantUML in VS Code</title><link>//blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</link><pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-05-08-asciidoc-plantuml-vscode/</guid><description>This post is for everyone that likes to write AsciiDoc in VS Code but also wants to inline PlantUML diagrams within their docs. In a previous post about diagrams with PlantUML I gave an intro into PlantUML and how to preview images in VS Code. With the latest release of the asciidoctor plugin for VS Code it is possible to easily preview embedded PlantUML images within AsciiDocs. No more need to maintain attributes in each file üéâ</description></item><item><title>Configure Azure Active Directory as Authentication Provider for Gitea</title><link>//blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2019-03-23-configure-azure-ad-for-gitea/</guid><description>&lt;p&gt;&lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;Gitea&lt;/a&gt; is an open source git hosting platform, written in Go forked from the Gogs project and seems to be highly inspired by GitHub.
If you want to host your own git platform and want to use &lt;strong&gt;Azure Active Directory&lt;/strong&gt; as an authentication provider - this post might help you.&lt;/p&gt;
&lt;p&gt;</description></item><item><title>Get the most out of hackathons</title><link>//blog.anoff.io/2018-12-09-stuttgart-hackathon/</link><pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-12-09-stuttgart-hackathon/</guid><description>&lt;p&gt;End of October I joined the &lt;a href=&#34;https://www.hackathon-stuttgart.de/&#34;&gt;Stuttgart Hackathon&lt;/a&gt; for the second time. It was my overall 4th public Hackathon. In this blog post I want to tell you why I enjoy doing Hackathons and why you should join one too if you have the chance!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR; &lt;strong&gt;Network&lt;/strong&gt; and play with expensive toys&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Markdown native diagrams with PlantUML</title><link>//blog.anoff.io/2018-07-31-diagrams-with-plantuml/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-07-31-diagrams-with-plantuml/</guid><description>This post covers PlantUML basics and how it can be used in GitLab or GitHub projects as well as a seamless local development environment using Visual Studio Code. I have been wanting to write this post for months. Lately I have been using PlantUML extensively at work but also in my private projects. You can see it being used in my plantbuddy and techradar projects on GitHub. Using it in different places and for various purposes I came across a bunch of issues that I want to share in this post.</description></item><item><title>GitLab CI/CD for GitHub</title><link>//blog.anoff.io/2018-03-30-gitlab-ci-for-github/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-03-30-gitlab-ci-for-github/</guid><description>&lt;p&gt;When creating a git project that you want to share with others you traditionally had the choice between GitHub with its huge community and tons of integrations, GitLab with a great overall dev experience from issues to one of the best CI/CD solutions out there and BitBucket being one of the friends you have since kindergarten. My personal decision was to host all my personal projects on &lt;a href=&#34;https://github.com/anoff&#34;&gt;ü¶ë GitHub&lt;/a&gt;. For projects that need CI/CD I tinkered around with &lt;a href=&#34;https://travis-ci.org/&#34;&gt;üë∑‚Äç Travis CI&lt;/a&gt; and &lt;a href=&#34;https://circleci.com/&#34;&gt;üÖæÔ∏è Circle CI&lt;/a&gt; on top of GitHub.&lt;/p&gt;</description></item><item><title>Deploy Datascience infrastructure on Azure using Terraform</title><link>//blog.anoff.io/2018-01-23-dsvm-terraform/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>//blog.anoff.io/2018-01-23-dsvm-terraform/</guid><description>In this article I will talk about my experience building my first infrastructure deployment using Terraform that does (a little) more than combining off-the-shelf resources.
The stack we will deploy üì¶ Lately I‚Äôve been looking at a lot of Microsoft Azure services in the big data area. I am looking for something to replace a Hadoop based üêò data analytics environment consisting mainly of HDFS, Spark &amp;amp; Jupyter.
The most obvious solution is to use a HDInsight cluster which is basically a managed Hadoop that you can pick in different flavours.</description></item></channel></rss>